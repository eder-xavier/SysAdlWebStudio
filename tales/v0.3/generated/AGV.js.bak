const { Model, Component, Port, CompositePort, Connector, Activity, Action, createExecutableFromExpression } = require('../SysADLBase');
class SupervisorySystem extends Component { constructor(name){ super(name); } }
class AGVSystem extends Component { constructor(name){ super(name); } }
class DisplaySystem extends Component { constructor(name){ super(name); } }
class Motor extends Component { constructor(name){ super(name); } }
class ArrivalSensor extends Component { constructor(name){ super(name); } }
class RobotArm extends Component { constructor(name){ super(name); } }
class VehicleControl extends Component { constructor(name){ super(name); } }
class CheckStation extends Component { constructor(name){ super(name); } }
class ControlArm extends Component { constructor(name){ super(name); } }
class NotifierMotor extends Component { constructor(name){ super(name); } }
class StartMoving extends Component { constructor(name){ super(name); } }
class NotifierArm extends Component { constructor(name){ super(name); } }
class VehicleTimer extends Component { constructor(name){ super(name); } }
class FactoryAutomationSystem extends Component { constructor(name){ super(name); } }

class SysADLArchitecture extends Model {
  constructor(){
    super("SysADLArchitecture");
    
    this.FactoryAutomationSystem = new FactoryAutomationSystem("FactoryAutomationSystem");
    this.addComponent(this.FactoryAutomationSystem);
    this.FactoryAutomationSystem.agvs = new AGVSystem("agvs");
    this.FactoryAutomationSystem.addComponent(this.FactoryAutomationSystem.agvs);
    this.FactoryAutomationSystem.ds = new DisplaySystem("ds");
    this.FactoryAutomationSystem.addComponent(this.FactoryAutomationSystem.ds);
    this.FactoryAutomationSystem.ss = new SupervisorySystem("ss");
    this.FactoryAutomationSystem.addComponent(this.FactoryAutomationSystem.ss);
    this.FactoryAutomationSystem.agvs.as = new ArrivalSensor("as");
    this.FactoryAutomationSystem.agvs.addComponent(this.FactoryAutomationSystem.agvs.as);
    this.FactoryAutomationSystem.agvs.m = new Motor("m");
    this.FactoryAutomationSystem.agvs.addComponent(this.FactoryAutomationSystem.agvs.m);
    this.FactoryAutomationSystem.agvs.ra = new RobotArm("ra");
    this.FactoryAutomationSystem.agvs.addComponent(this.FactoryAutomationSystem.agvs.ra);
    this.FactoryAutomationSystem.agvs.vc = new VehicleControl("vc");
    this.FactoryAutomationSystem.agvs.addComponent(this.FactoryAutomationSystem.agvs.vc);
    this.FactoryAutomationSystem.agvs.vc.ca = new ControlArm("ca");
    this.FactoryAutomationSystem.agvs.vc.addComponent(this.FactoryAutomationSystem.agvs.vc.ca);
    this.FactoryAutomationSystem.agvs.vc.cs = new CheckStation("cs");
    this.FactoryAutomationSystem.agvs.vc.addComponent(this.FactoryAutomationSystem.agvs.vc.cs);
    this.FactoryAutomationSystem.agvs.vc.na = new NotifierArm("na");
    this.FactoryAutomationSystem.agvs.vc.addComponent(this.FactoryAutomationSystem.agvs.vc.na);
    this.FactoryAutomationSystem.agvs.vc.nm = new NotifierMotor("nm");
    this.FactoryAutomationSystem.agvs.vc.addComponent(this.FactoryAutomationSystem.agvs.vc.nm);
    this.FactoryAutomationSystem.agvs.vc.sm = new StartMoving("sm");
    this.FactoryAutomationSystem.agvs.vc.addComponent(this.FactoryAutomationSystem.agvs.vc.sm);
    this.FactoryAutomationSystem.agvs.vc.vt = new VehicleTimer("vt");
    this.FactoryAutomationSystem.agvs.vc.addComponent(this.FactoryAutomationSystem.agvs.vc.vt);

    
    
    if (!this.FactoryAutomationSystem.ss.ports["in_outData"]) { const __p = new Port("in_outData", 'in', { owner: "ss" }); this.FactoryAutomationSystem.ss.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.ports["sendStatus"]) { const __p = new Port("sendStatus", 'in', { owner: "agvs" }); this.FactoryAutomationSystem.agvs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.ports["in_outData"]) { const __p = new Port("in_outData", 'in', { owner: "agvs" }); this.FactoryAutomationSystem.agvs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.ports["start_stop_in"]) { const __p = new Port("start_stop_in", 'in', { owner: "agvs" }); this.FactoryAutomationSystem.agvs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.ports["started_stopped_out"]) { const __p = new Port("started_stopped_out", 'in', { owner: "agvs" }); this.FactoryAutomationSystem.agvs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.ports["arrivalDetected_out"]) { const __p = new Port("arrivalDetected_out", 'in', { owner: "agvs" }); this.FactoryAutomationSystem.agvs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.ports["start"]) { const __p = new Port("start", 'in', { owner: "agvs" }); this.FactoryAutomationSystem.agvs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.ports["started"]) { const __p = new Port("started", 'in', { owner: "agvs" }); this.FactoryAutomationSystem.agvs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.ports["arrivalDetected_in"]) { const __p = new Port("arrivalDetected_in", 'in', { owner: "agvs" }); this.FactoryAutomationSystem.agvs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.ports["startArm"]) { const __p = new Port("startArm", 'in', { owner: "agvs" }); this.FactoryAutomationSystem.agvs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.ports["startedArm"]) { const __p = new Port("startedArm", 'in', { owner: "agvs" }); this.FactoryAutomationSystem.agvs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.ports["started_stopped_in"]) { const __p = new Port("started_stopped_in", 'in', { owner: "agvs" }); this.FactoryAutomationSystem.agvs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.ports["start_stop_out"]) { const __p = new Port("start_stop_out", 'in', { owner: "agvs" }); this.FactoryAutomationSystem.agvs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.ds.ports["receiveStatus"]) { const __p = new Port("receiveStatus", 'in', { owner: "ds" }); this.FactoryAutomationSystem.ds.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.m.ports["start_stop"]) { const __p = new Port("start_stop", 'in', { owner: "m" }); this.FactoryAutomationSystem.agvs.m.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.m.ports["started_stopped"]) { const __p = new Port("started_stopped", 'in', { owner: "m" }); this.FactoryAutomationSystem.agvs.m.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.as.ports["arrivalDetected"]) { const __p = new Port("arrivalDetected", 'in', { owner: "as" }); this.FactoryAutomationSystem.agvs.as.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.ra.ports["start"]) { const __p = new Port("start", 'in', { owner: "ra" }); this.FactoryAutomationSystem.agvs.ra.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.ra.ports["started"]) { const __p = new Port("started", 'in', { owner: "ra" }); this.FactoryAutomationSystem.agvs.ra.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["sendStatus"]) { const __p = new Port("sendStatus", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["arrivalDetected"]) { const __p = new Port("arrivalDetected", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["startArm"]) { const __p = new Port("startArm", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["startedArm"]) { const __p = new Port("startedArm", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["started_stopped"]) { const __p = new Port("started_stopped", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["start_stop"]) { const __p = new Port("start_stop", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["in_outData"]) { const __p = new Port("in_outData", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["ack_cs"]) { const __p = new Port("ack_cs", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["location_cs"]) { const __p = new Port("location_cs", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["destination_cs"]) { const __p = new Port("destination_cs", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["stop"]) { const __p = new Port("stop", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["passed"]) { const __p = new Port("passed", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["cmd_ca"]) { const __p = new Port("cmd_ca", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["ack_ca"]) { const __p = new Port("ack_ca", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["inAck"]) { const __p = new Port("inAck", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["ack"]) { const __p = new Port("ack", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["outAck"]) { const __p = new Port("outAck", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["move"]) { const __p = new Port("move", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["cmd_sm"]) { const __p = new Port("cmd_sm", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["destination"]) { const __p = new Port("destination", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["start"]) { const __p = new Port("start", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["arrivedStatus"]) { const __p = new Port("arrivedStatus", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["loaded_unloaded"]) { const __p = new Port("loaded_unloaded", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["AGVStatus"]) { const __p = new Port("AGVStatus", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["location_vt"]) { const __p = new Port("location_vt", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["destination_vt"]) { const __p = new Port("destination_vt", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ports["cmd"]) { const __p = new Port("cmd", 'in', { owner: "vc" }); this.FactoryAutomationSystem.agvs.vc.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.cs.ports["ack"]) { const __p = new Port("ack", 'in', { owner: "cs" }); this.FactoryAutomationSystem.agvs.vc.cs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.cs.ports["location"]) { const __p = new Port("location", 'in', { owner: "cs" }); this.FactoryAutomationSystem.agvs.vc.cs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.cs.ports["destination"]) { const __p = new Port("destination", 'in', { owner: "cs" }); this.FactoryAutomationSystem.agvs.vc.cs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.cs.ports["stop"]) { const __p = new Port("stop", 'in', { owner: "cs" }); this.FactoryAutomationSystem.agvs.vc.cs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.cs.ports["arrivalDetected"]) { const __p = new Port("arrivalDetected", 'in', { owner: "cs" }); this.FactoryAutomationSystem.agvs.vc.cs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.cs.ports["passed"]) { const __p = new Port("passed", 'in', { owner: "cs" }); this.FactoryAutomationSystem.agvs.vc.cs.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ca.ports["cmd"]) { const __p = new Port("cmd", 'in', { owner: "ca" }); this.FactoryAutomationSystem.agvs.vc.ca.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ca.ports["ack"]) { const __p = new Port("ack", 'in', { owner: "ca" }); this.FactoryAutomationSystem.agvs.vc.ca.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.ca.ports["startArm"]) { const __p = new Port("startArm", 'in', { owner: "ca" }); this.FactoryAutomationSystem.agvs.vc.ca.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.nm.ports["inAck"]) { const __p = new Port("inAck", 'in', { owner: "nm" }); this.FactoryAutomationSystem.agvs.vc.nm.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.nm.ports["ack"]) { const __p = new Port("ack", 'in', { owner: "nm" }); this.FactoryAutomationSystem.agvs.vc.nm.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.nm.ports["outAck"]) { const __p = new Port("outAck", 'in', { owner: "nm" }); this.FactoryAutomationSystem.agvs.vc.nm.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.sm.ports["move"]) { const __p = new Port("move", 'in', { owner: "sm" }); this.FactoryAutomationSystem.agvs.vc.sm.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.sm.ports["cmd"]) { const __p = new Port("cmd", 'in', { owner: "sm" }); this.FactoryAutomationSystem.agvs.vc.sm.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.sm.ports["destination"]) { const __p = new Port("destination", 'in', { owner: "sm" }); this.FactoryAutomationSystem.agvs.vc.sm.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.sm.ports["start"]) { const __p = new Port("start", 'in', { owner: "sm" }); this.FactoryAutomationSystem.agvs.vc.sm.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.na.ports["arrivedStatus"]) { const __p = new Port("arrivedStatus", 'in', { owner: "na" }); this.FactoryAutomationSystem.agvs.vc.na.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.na.ports["loaded_unloaded"]) { const __p = new Port("loaded_unloaded", 'in', { owner: "na" }); this.FactoryAutomationSystem.agvs.vc.na.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.vt.ports["AGVStatus"]) { const __p = new Port("AGVStatus", 'in', { owner: "vt" }); this.FactoryAutomationSystem.agvs.vc.vt.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.vt.ports["location"]) { const __p = new Port("location", 'in', { owner: "vt" }); this.FactoryAutomationSystem.agvs.vc.vt.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.vt.ports["destination"]) { const __p = new Port("destination", 'in', { owner: "vt" }); this.FactoryAutomationSystem.agvs.vc.vt.addPort(__p); }
    
    if (!this.FactoryAutomationSystem.agvs.vc.vt.ports["cmd"]) { const __p = new Port("cmd", 'in', { owner: "vt" }); this.FactoryAutomationSystem.agvs.vc.vt.addPort(__p); }
    
    
    
    
    
    
    this.addExecutableSafe("SysADLArchitecture.SendStartMotorEX", "executable def SendStartMotorEX ( in move : VehicleData) : out CommandToMotor {\n\t\treturn CommandToMotor::start;\n\t}", []);
    this.addExecutableSafe("SysADLArchitecture.SendCommandEX", "executable def SendCommandEX ( in move : VehicleData) : out CommandToArm {\n\t\treturn move->command;\n\t}", []);
    this.addExecutableSafe("SysADLArchitecture.SendDestinationEX", "executable def SendDestinationEX ( in move : VehicleData) : out Location {\n\t\treturn move->destination;\n\t}", []);
    this.addExecutableSafe("SysADLArchitecture.NotifyAGVFromMotorEX", "executable def NotifyAGVFromMotorEX ( in statusMotor : NotificationFromMotor) : \n\tout NotificationFromMotor{\n\t\treturn statusMotor;\n\t}", []);
    this.addExecutableSafe("SysADLArchitecture.NotifySupervisoryFromMotorEX", "executable def NotifySupervisoryFromMotorEX ( in statusMotor : NotificationFromMotor) : \n\t\tout\tNotificationToSupervisory {\n\t\tif (statusMotor == NotificationFromMotor::started) \n\t\t\treturn NotificationToSupervisory::departed;\n\t\telse\n\t\t\treturn NotificationToSupervisory::traveling;\n\t}", []);
    this.addExecutableSafe("SysADLArchitecture.CompareStationsEX", "executable def CompareStationsEX ( in destination : Location, in location : Location, \n\t\tin statusMotor : NotificationFromMotor) : \tout Boolean {\n\t\tif(statusMotor == NotificationFromMotor::started && destination == location)\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t}", []);
    this.addExecutableSafe("SysADLArchitecture.StopMotorEX", "executable def StopMotorEX ( in comparisonResult : Boolean) :\n\tout CommandToMotor {\n\t\tif(comparisonResult == true)\n\t\t\treturn CommandToMotor::stop;\n\t\telse\n\t\t\treturn null;\n\t}", []);
    this.addExecutableSafe("SysADLArchitecture.PassedMotorEX", "executable def PassedMotorEX ( in comparisonResult : Boolean) :\n\tout NotificationToSupervisory {\n\t\tif(comparisonResult == false)\n\t\t\treturn NotificationToSupervisory::passed;\n\t\telse\n\t\t\treturn null;\n\t}", []);
    this.addExecutableSafe("SysADLArchitecture.SendCurrentLocationEX", "executable def SendCurrentLocationEX ( in location : Location)\n\t: out Location {\n\t\treturn location;\n\t}", []);
    this.addExecutableSafe("SysADLArchitecture.ControlArmEX", "executable def ControlArmEX ( in statusMotor : NotificationFromMotor, in cmd : CommandToArm) : out CommandToArm {\n\t\tif(statusMotor == NotificationFromMotor::stopped)\n\t\t\treturn cmd;\n\t\telse\n\t\t\treturn CommandToArm::idle;\n\t}", []);
    this.addExecutableSafe("SysADLArchitecture.NotifierArmEX", "executable def NotifierArmEX ( in statusArm : NotificationFromArm) : \n\tout\tNotificationToSupervisory {\n\t\treturn NotificationToSupervisory::arrived;\n\t}", []);
    this.addExecutableSafe("SysADLArchitecture.VehicleTimerEX", "executable def VehicleTimerEX ( in location : Location, in cmd : CommandToArm, \n\t\tin destination : Location) : out Status {\n\t\t\n\t\tlet s : Status;\n\t\ts->destination = destination;\n\t\ts->location = location;\n\t\ts->command = cmd;\n\t\t\n\t\treturn s;\n\t}", []);
    this.addExecutableSafe("SysADLArchitecture.yb3q", "executable CompareStationsEX to CompareStationsAN", []);
    this.addExecutableSafe("SysADLArchitecture.uov4", "executable ControlArmEX to ControlArmAN", []);
    this.addExecutableSafe("SysADLArchitecture.5s9p", "executable NotifierArmEX to NotifierArmAN", []);
    this.addExecutableSafe("SysADLArchitecture.lxxp", "executable NotifyAGVFromMotorEX to NotifyAGVFromMotorAN", []);
    this.addExecutableSafe("SysADLArchitecture.48ai", "executable NotifySupervisoryFromMotorEX to NotifySupervisoryFromMotorAN", []);
    this.addExecutableSafe("SysADLArchitecture.f1m9", "executable PassedMotorEX to PassedMotorAN", []);
    this.addExecutableSafe("SysADLArchitecture.v350", "executable SendCommandEX to SendCommandAN", []);
    this.addExecutableSafe("SysADLArchitecture.klmc", "executable SendCurrentLocationEX to SendCurrentLocationAN", []);
    this.addExecutableSafe("SysADLArchitecture.3bg9", "executable SendDestinationEX to SendDestinationAN", []);
    this.addExecutableSafe("SysADLArchitecture.kunp", "executable SendStartMotorEX to SendStartMotorAN", []);
    this.addExecutableSafe("SysADLArchitecture.vivg", "executable StopMotorEX to StopMotorAN", []);
    this.addExecutableSafe("SysADLArchitecture.7988", "executable VehicleTimerEX to VehicleTimerAN", []);
    const act_StartMovingAC_sm = new Activity("StartMovingAC", { component: "sm", inputPorts: ["move"] });
    act_StartMovingAC_sm.addAction(new Action("SendStartMotorAN", [], "SendStartMotorEX"));
    act_StartMovingAC_sm.addAction(new Action("SendCommandAN", [], "SendCommandEX"));
    act_StartMovingAC_sm.addAction(new Action("SendDestinationAN", [], "SendDestinationEX"));
    this.registerActivity("StartMovingAC::sm", act_StartMovingAC_sm);
    const act_NotifierMotorAC_nm = new Activity("NotifierMotorAC", { component: "nm", inputPorts: ["inAck"] });
    act_NotifierMotorAC_nm.addAction(new Action("NotifyAGVFromMotorAN", [], "NotifyAGVFromMotorEX"));
    act_NotifierMotorAC_nm.addAction(new Action("NotifySupervisoryFromMotorAN", [], "NotifySupervisoryFromMotorEX"));
    this.registerActivity("NotifierMotorAC::nm", act_NotifierMotorAC_nm);
    const act_CheckStationAC_cs = new Activity("CheckStationAC", { component: "cs", inputPorts: ["ack"] });
    act_CheckStationAC_cs.addAction(new Action("CompareStationsAN", [], "CompareStationsEX"));
    act_CheckStationAC_cs.addAction(new Action("StopMotorAN", [], "StopMotorEX"));
    act_CheckStationAC_cs.addAction(new Action("PassedMotorAN", [], "PassedMotorEX"));
    act_CheckStationAC_cs.addAction(new Action("SendCurrentLocationAN", [], "SendCurrentLocationEX"));
    this.registerActivity("CheckStationAC::cs", act_CheckStationAC_cs);
    const act_ControlArmAC_ca = new Activity("ControlArmAC", { component: "ca", inputPorts: ["cmd"] });
    act_ControlArmAC_ca.addAction(new Action("ControlArmAN", [], "ControlArmEX"));
    this.registerActivity("ControlArmAC::ca", act_ControlArmAC_ca);
    const act_NotifierArmAC_na = new Activity("NotifierArmAC", { component: "na", inputPorts: ["arrivedStatus"] });
    act_NotifierArmAC_na.addAction(new Action("NotifierArmAN", [], "NotifierArmEX"));
    this.registerActivity("NotifierArmAC::na", act_NotifierArmAC_na);
    const act_VehicleTimerAC_vt = new Activity("VehicleTimerAC", { component: "vt", inputPorts: ["destination"] });
    act_VehicleTimerAC_vt.addAction(new Action("VehicleTimerAN", [], "VehicleTimerEX"));
    this.registerActivity("VehicleTimerAC::vt", act_VehicleTimerAC_vt);
    
    const conn_dataExchange_1 = new Connector("dataExchange");
    const conn_dataExchange_1__seen = new Set();
    if(!conn_dataExchange_1__seen.has("ss::in_outData")) { this.attachEndpointSafe(conn_dataExchange_1, this.FactoryAutomationSystem.ss, "in_outData"); conn_dataExchange_1__seen.add("ss::in_outData"); }
    this.addConnector(conn_dataExchange_1);
    
    const conn_ss_in_outData__x_x_ss_in_outData__x_x_2 = new Connector("ss.in_outData__x.x_ss.in_outData__x.x");
    const conn_ss_in_outData__x_x_ss_in_outData__x_x_2__seen = new Set();
    if(!conn_ss_in_outData__x_x_ss_in_outData__x_x_2__seen.has("ss::in_outData")) { this.attachEndpointSafe(conn_ss_in_outData__x_x_ss_in_outData__x_x_2, this.FactoryAutomationSystem.ss, "in_outData"); conn_ss_in_outData__x_x_ss_in_outData__x_x_2__seen.add("ss::in_outData"); }
    this.addConnector(conn_ss_in_outData__x_x_ss_in_outData__x_x_2);
    
    const conn_updateStatus_4 = new Connector("updateStatus");
    const conn_updateStatus_4__seen = new Set();
    if(!conn_updateStatus_4__seen.has("ds::receiveStatus")) { this.attachEndpointSafe(conn_updateStatus_4, this.FactoryAutomationSystem.ds, "receiveStatus"); conn_updateStatus_4__seen.add("ds::receiveStatus"); }
    this.addConnector(conn_updateStatus_4);
    
    const conn_x_x__ds_receiveStatus_x_x__ds_receiveStatus_5 = new Connector("x.x__ds.receiveStatus_x.x__ds.receiveStatus");
    const conn_x_x__ds_receiveStatus_x_x__ds_receiveStatus_5__seen = new Set();
    if(!conn_x_x__ds_receiveStatus_x_x__ds_receiveStatus_5__seen.has("ds::receiveStatus")) { this.attachEndpointSafe(conn_x_x__ds_receiveStatus_x_x__ds_receiveStatus_5, this.FactoryAutomationSystem.ds, "receiveStatus"); conn_x_x__ds_receiveStatus_x_x__ds_receiveStatus_5__seen.add("ds::receiveStatus"); }
    this.addConnector(conn_x_x__ds_receiveStatus_x_x__ds_receiveStatus_5);
    
    const conn_arrived_7 = new Connector("arrived");
    const conn_arrived_7__seen = new Set();
    if(!conn_arrived_7__seen.has("agvs::arrivalDetected_out")) { this.attachEndpointSafe(conn_arrived_7, this.FactoryAutomationSystem.agvs, "arrivalDetected_out"); conn_arrived_7__seen.add("agvs::arrivalDetected_out"); }
    if(!conn_arrived_7__seen.has("agvs::arrivalDetected_in")) { this.attachEndpointSafe(conn_arrived_7, this.FactoryAutomationSystem.agvs, "arrivalDetected_in"); conn_arrived_7__seen.add("agvs::arrivalDetected_in"); }
    this.addConnector(conn_arrived_7);
    
    const conn_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_8 = new Connector("arrivalDetected_out.arrivalDetected_out__arrivalDetected_in.arrivalDetected_in_arrivalDetected_out.arrivalDetected_out__arrivalDetected_in.arrivalDetected_in");
    const conn_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_8__seen = new Set();
    if(!conn_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_8__seen.has("agvs::arrivalDetected_out")) { this.attachEndpointSafe(conn_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_8, this.FactoryAutomationSystem.agvs, "arrivalDetected_out"); conn_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_8__seen.add("agvs::arrivalDetected_out"); }
    if(!conn_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_8__seen.has("agvs::arrivalDetected_in")) { this.attachEndpointSafe(conn_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_8, this.FactoryAutomationSystem.agvs, "arrivalDetected_in"); conn_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_8__seen.add("agvs::arrivalDetected_in"); }
    this.addConnector(conn_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_arrivalDetected_out_arrivalDetected_out__arrivalDetected_in_arrivalDetected_in_8);
    
    const conn_ackArm_10 = new Connector("ackArm");
    const conn_ackArm_10__seen = new Set();
    if(!conn_ackArm_10__seen.has("ra::started")) { this.attachEndpointSafe(conn_ackArm_10, this.FactoryAutomationSystem.agvs.ra, "started"); conn_ackArm_10__seen.add("ra::started"); }
    if(!conn_ackArm_10__seen.has("vc::startedArm")) { this.attachEndpointSafe(conn_ackArm_10, this.FactoryAutomationSystem.agvs.vc, "startedArm"); conn_ackArm_10__seen.add("vc::startedArm"); }
    this.addConnector(conn_ackArm_10);
    
    const conn_started_started__startedArm_startedArm_started_started__startedArm_startedArm_11 = new Connector("started.started__startedArm.startedArm_started.started__startedArm.startedArm");
    const conn_started_started__startedArm_startedArm_started_started__startedArm_startedArm_11__seen = new Set();
    if(!conn_started_started__startedArm_startedArm_started_started__startedArm_startedArm_11__seen.has("ra::started")) { this.attachEndpointSafe(conn_started_started__startedArm_startedArm_started_started__startedArm_startedArm_11, this.FactoryAutomationSystem.agvs.ra, "started"); conn_started_started__startedArm_startedArm_started_started__startedArm_startedArm_11__seen.add("ra::started"); }
    if(!conn_started_started__startedArm_startedArm_started_started__startedArm_startedArm_11__seen.has("vc::startedArm")) { this.attachEndpointSafe(conn_started_started__startedArm_startedArm_started_started__startedArm_startedArm_11, this.FactoryAutomationSystem.agvs.vc, "startedArm"); conn_started_started__startedArm_startedArm_started_started__startedArm_startedArm_11__seen.add("vc::startedArm"); }
    this.addConnector(conn_started_started__startedArm_startedArm_started_started__startedArm_startedArm_11);
    
    const conn_cmdArm_13 = new Connector("cmdArm");
    const conn_cmdArm_13__seen = new Set();
    if(!conn_cmdArm_13__seen.has("ra::start")) { this.attachEndpointSafe(conn_cmdArm_13, this.FactoryAutomationSystem.agvs.ra, "start"); conn_cmdArm_13__seen.add("ra::start"); }
    this.addConnector(conn_cmdArm_13);
    
    const conn_x_x__ra_start_x_x__ra_start_14 = new Connector("x.x__ra.start_x.x__ra.start");
    const conn_x_x__ra_start_x_x__ra_start_14__seen = new Set();
    if(!conn_x_x__ra_start_x_x__ra_start_14__seen.has("ra::start")) { this.attachEndpointSafe(conn_x_x__ra_start_x_x__ra_start_14, this.FactoryAutomationSystem.agvs.ra, "start"); conn_x_x__ra_start_x_x__ra_start_14__seen.add("ra::start"); }
    this.addConnector(conn_x_x__ra_start_x_x__ra_start_14);
    
    const conn_ackMotor_16 = new Connector("ackMotor");
    const conn_ackMotor_16__seen = new Set();
    if(!conn_ackMotor_16__seen.has("agvs::started_stopped_out")) { this.attachEndpointSafe(conn_ackMotor_16, this.FactoryAutomationSystem.agvs, "started_stopped_out"); conn_ackMotor_16__seen.add("agvs::started_stopped_out"); }
    if(!conn_ackMotor_16__seen.has("agvs::started_stopped_in")) { this.attachEndpointSafe(conn_ackMotor_16, this.FactoryAutomationSystem.agvs, "started_stopped_in"); conn_ackMotor_16__seen.add("agvs::started_stopped_in"); }
    this.addConnector(conn_ackMotor_16);
    
    const conn_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_17 = new Connector("started_stopped_out.started_stopped_out__started_stopped_in.started_stopped_in_started_stopped_out.started_stopped_out__started_stopped_in.started_stopped_in");
    const conn_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_17__seen = new Set();
    if(!conn_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_17__seen.has("agvs::started_stopped_out")) { this.attachEndpointSafe(conn_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_17, this.FactoryAutomationSystem.agvs, "started_stopped_out"); conn_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_17__seen.add("agvs::started_stopped_out"); }
    if(!conn_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_17__seen.has("agvs::started_stopped_in")) { this.attachEndpointSafe(conn_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_17, this.FactoryAutomationSystem.agvs, "started_stopped_in"); conn_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_17__seen.add("agvs::started_stopped_in"); }
    this.addConnector(conn_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_started_stopped_out_started_stopped_out__started_stopped_in_started_stopped_in_17);
    
    const conn_cmdMotor_19 = new Connector("cmdMotor");
    const conn_cmdMotor_19__seen = new Set();
    if(!conn_cmdMotor_19__seen.has("m::start_stop_in")) { this.attachEndpointSafe(conn_cmdMotor_19, this.FactoryAutomationSystem.agvs.m, "start_stop_in"); conn_cmdMotor_19__seen.add("m::start_stop_in"); }
    this.addConnector(conn_cmdMotor_19);
    
    const conn_x_x__m_start_stop_in_x_x__m_start_stop_in_20 = new Connector("x.x__m.start_stop_in_x.x__m.start_stop_in");
    const conn_x_x__m_start_stop_in_x_x__m_start_stop_in_20__seen = new Set();
    if(!conn_x_x__m_start_stop_in_x_x__m_start_stop_in_20__seen.has("m::start_stop_in")) { this.attachEndpointSafe(conn_x_x__m_start_stop_in_x_x__m_start_stop_in_20, this.FactoryAutomationSystem.agvs.m, "start_stop_in"); conn_x_x__m_start_stop_in_x_x__m_start_stop_in_20__seen.add("m::start_stop_in"); }
    this.addConnector(conn_x_x__m_start_stop_in_x_x__m_start_stop_in_20);
    
    const conn_destinationStation2_22 = new Connector("destinationStation2");
    const conn_destinationStation2_22__seen = new Set();
    if(!conn_destinationStation2_22__seen.has("cs::destination")) { this.attachEndpointSafe(conn_destinationStation2_22, this.FactoryAutomationSystem.agvs.vc.cs, "destination"); conn_destinationStation2_22__seen.add("cs::destination"); }
    if(!conn_destinationStation2_22__seen.has("vc::destination_vt")) { this.attachEndpointSafe(conn_destinationStation2_22, this.FactoryAutomationSystem.agvs.vc, "destination_vt"); conn_destinationStation2_22__seen.add("vc::destination_vt"); }
    this.addConnector(conn_destinationStation2_22);
    
    const conn_destination_destination__destination_vt_destination_vt_destination_destination__destination_vt_destination_vt_23 = new Connector("destination.destination__destination_vt.destination_vt_destination.destination__destination_vt.destination_vt");
    const conn_destination_destination__destination_vt_destination_vt_destination_destination__destination_vt_destination_vt_23__seen = new Set();
    if(!conn_destination_destination__destination_vt_destination_vt_destination_destination__destination_vt_destination_vt_23__seen.has("cs::destination")) { this.attachEndpointSafe(conn_destination_destination__destination_vt_destination_vt_destination_destination__destination_vt_destination_vt_23, this.FactoryAutomationSystem.agvs.vc.cs, "destination"); conn_destination_destination__destination_vt_destination_vt_destination_destination__destination_vt_destination_vt_23__seen.add("cs::destination"); }
    if(!conn_destination_destination__destination_vt_destination_vt_destination_destination__destination_vt_destination_vt_23__seen.has("vc::destination_vt")) { this.attachEndpointSafe(conn_destination_destination__destination_vt_destination_vt_destination_destination__destination_vt_destination_vt_23, this.FactoryAutomationSystem.agvs.vc, "destination_vt"); conn_destination_destination__destination_vt_destination_vt_destination_destination__destination_vt_destination_vt_23__seen.add("vc::destination_vt"); }
    this.addConnector(conn_destination_destination__destination_vt_destination_vt_destination_destination__destination_vt_destination_vt_23);
    
    const conn_destinationStation_25 = new Connector("destinationStation");
    const conn_destinationStation_25__seen = new Set();
    if(!conn_destinationStation_25__seen.has("cs::destination")) { this.attachEndpointSafe(conn_destinationStation_25, this.FactoryAutomationSystem.agvs.vc.cs, "destination"); conn_destinationStation_25__seen.add("cs::destination"); }
    if(!conn_destinationStation_25__seen.has("vc::destination_cs")) { this.attachEndpointSafe(conn_destinationStation_25, this.FactoryAutomationSystem.agvs.vc, "destination_cs"); conn_destinationStation_25__seen.add("vc::destination_cs"); }
    this.addConnector(conn_destinationStation_25);
    
    const conn_destination_destination__destination_cs_destination_cs_destination_destination__destination_cs_destination_cs_26 = new Connector("destination.destination__destination_cs.destination_cs_destination.destination__destination_cs.destination_cs");
    const conn_destination_destination__destination_cs_destination_cs_destination_destination__destination_cs_destination_cs_26__seen = new Set();
    if(!conn_destination_destination__destination_cs_destination_cs_destination_destination__destination_cs_destination_cs_26__seen.has("cs::destination")) { this.attachEndpointSafe(conn_destination_destination__destination_cs_destination_cs_destination_destination__destination_cs_destination_cs_26, this.FactoryAutomationSystem.agvs.vc.cs, "destination"); conn_destination_destination__destination_cs_destination_cs_destination_destination__destination_cs_destination_cs_26__seen.add("cs::destination"); }
    if(!conn_destination_destination__destination_cs_destination_cs_destination_destination__destination_cs_destination_cs_26__seen.has("vc::destination_cs")) { this.attachEndpointSafe(conn_destination_destination__destination_cs_destination_cs_destination_destination__destination_cs_destination_cs_26, this.FactoryAutomationSystem.agvs.vc, "destination_cs"); conn_destination_destination__destination_cs_destination_cs_destination_destination__destination_cs_destination_cs_26__seen.add("vc::destination_cs"); }
    this.addConnector(conn_destination_destination__destination_cs_destination_cs_destination_destination__destination_cs_destination_cs_26);
    
    const conn_command_28 = new Connector("command");
    const conn_command_28__seen = new Set();
    if(!conn_command_28__seen.has("vc::cmd_sm")) { this.attachEndpointSafe(conn_command_28, this.FactoryAutomationSystem.agvs.vc, "cmd_sm"); conn_command_28__seen.add("vc::cmd_sm"); }
    if(!conn_command_28__seen.has("ca::cmd")) { this.attachEndpointSafe(conn_command_28, this.FactoryAutomationSystem.agvs.vc.ca, "cmd"); conn_command_28__seen.add("ca::cmd"); }
    this.addConnector(conn_command_28);
    
    const conn_cmd_sm_cmd_sm__cmd_cmd_cmd_sm_cmd_sm__cmd_cmd_29 = new Connector("cmd_sm.cmd_sm__cmd.cmd_cmd_sm.cmd_sm__cmd.cmd");
    const conn_cmd_sm_cmd_sm__cmd_cmd_cmd_sm_cmd_sm__cmd_cmd_29__seen = new Set();
    if(!conn_cmd_sm_cmd_sm__cmd_cmd_cmd_sm_cmd_sm__cmd_cmd_29__seen.has("vc::cmd_sm")) { this.attachEndpointSafe(conn_cmd_sm_cmd_sm__cmd_cmd_cmd_sm_cmd_sm__cmd_cmd_29, this.FactoryAutomationSystem.agvs.vc, "cmd_sm"); conn_cmd_sm_cmd_sm__cmd_cmd_cmd_sm_cmd_sm__cmd_cmd_29__seen.add("vc::cmd_sm"); }
    if(!conn_cmd_sm_cmd_sm__cmd_cmd_cmd_sm_cmd_sm__cmd_cmd_29__seen.has("ca::cmd")) { this.attachEndpointSafe(conn_cmd_sm_cmd_sm__cmd_cmd_cmd_sm_cmd_sm__cmd_cmd_29, this.FactoryAutomationSystem.agvs.vc.ca, "cmd"); conn_cmd_sm_cmd_sm__cmd_cmd_cmd_sm_cmd_sm__cmd_cmd_29__seen.add("ca::cmd"); }
    this.addConnector(conn_cmd_sm_cmd_sm__cmd_cmd_cmd_sm_cmd_sm__cmd_cmd_29);
    
    const conn_command2_31 = new Connector("command2");
    const conn_command2_31__seen = new Set();
    if(!conn_command2_31__seen.has("ca::cmd_ca")) { this.attachEndpointSafe(conn_command2_31, this.FactoryAutomationSystem.agvs.vc.ca, "cmd_ca"); conn_command2_31__seen.add("ca::cmd_ca"); }
    this.addConnector(conn_command2_31);
    
    const conn_x_x__ca_cmd_ca_x_x__ca_cmd_ca_32 = new Connector("x.x__ca.cmd_ca_x.x__ca.cmd_ca");
    const conn_x_x__ca_cmd_ca_x_x__ca_cmd_ca_32__seen = new Set();
    if(!conn_x_x__ca_cmd_ca_x_x__ca_cmd_ca_32__seen.has("ca::cmd_ca")) { this.attachEndpointSafe(conn_x_x__ca_cmd_ca_x_x__ca_cmd_ca_32, this.FactoryAutomationSystem.agvs.vc.ca, "cmd_ca"); conn_x_x__ca_cmd_ca_x_x__ca_cmd_ca_32__seen.add("ca::cmd_ca"); }
    this.addConnector(conn_x_x__ca_cmd_ca_x_x__ca_cmd_ca_32);
    
    const conn_currentLocation_34 = new Connector("currentLocation");
    const conn_currentLocation_34__seen = new Set();
    if(!conn_currentLocation_34__seen.has("vc::location_cs")) { this.attachEndpointSafe(conn_currentLocation_34, this.FactoryAutomationSystem.agvs.vc, "location_cs"); conn_currentLocation_34__seen.add("vc::location_cs"); }
    if(!conn_currentLocation_34__seen.has("vc::location_vt")) { this.attachEndpointSafe(conn_currentLocation_34, this.FactoryAutomationSystem.agvs.vc, "location_vt"); conn_currentLocation_34__seen.add("vc::location_vt"); }
    this.addConnector(conn_currentLocation_34);
    
    const conn_location_cs_location_cs__location_vt_location_vt_location_cs_location_cs__location_vt_location_vt_35 = new Connector("location_cs.location_cs__location_vt.location_vt_location_cs.location_cs__location_vt.location_vt");
    const conn_location_cs_location_cs__location_vt_location_vt_location_cs_location_cs__location_vt_location_vt_35__seen = new Set();
    if(!conn_location_cs_location_cs__location_vt_location_vt_location_cs_location_cs__location_vt_location_vt_35__seen.has("vc::location_cs")) { this.attachEndpointSafe(conn_location_cs_location_cs__location_vt_location_vt_location_cs_location_cs__location_vt_location_vt_35, this.FactoryAutomationSystem.agvs.vc, "location_cs"); conn_location_cs_location_cs__location_vt_location_vt_location_cs_location_cs__location_vt_location_vt_35__seen.add("vc::location_cs"); }
    if(!conn_location_cs_location_cs__location_vt_location_vt_location_cs_location_cs__location_vt_location_vt_35__seen.has("vc::location_vt")) { this.attachEndpointSafe(conn_location_cs_location_cs__location_vt_location_vt_location_cs_location_cs__location_vt_location_vt_35, this.FactoryAutomationSystem.agvs.vc, "location_vt"); conn_location_cs_location_cs__location_vt_location_vt_location_cs_location_cs__location_vt_location_vt_35__seen.add("vc::location_vt"); }
    this.addConnector(conn_location_cs_location_cs__location_vt_location_vt_location_cs_location_cs__location_vt_location_vt_35);
    
    const conn_sendNotificationMotor_37 = new Connector("sendNotificationMotor");
    const conn_sendNotificationMotor_37__seen = new Set();
    if(!conn_sendNotificationMotor_37__seen.has("nm::outAck")) { this.attachEndpointSafe(conn_sendNotificationMotor_37, this.FactoryAutomationSystem.agvs.vc.nm, "outAck"); conn_sendNotificationMotor_37__seen.add("nm::outAck"); }
    if(!conn_sendNotificationMotor_37__seen.has("vc::ack_ca")) { this.attachEndpointSafe(conn_sendNotificationMotor_37, this.FactoryAutomationSystem.agvs.vc, "ack_ca"); conn_sendNotificationMotor_37__seen.add("vc::ack_ca"); }
    this.addConnector(conn_sendNotificationMotor_37);
    
    const conn_outAck_outAck__ack_ca_ack_ca_outAck_outAck__ack_ca_ack_ca_38 = new Connector("outAck.outAck__ack_ca.ack_ca_outAck.outAck__ack_ca.ack_ca");
    const conn_outAck_outAck__ack_ca_ack_ca_outAck_outAck__ack_ca_ack_ca_38__seen = new Set();
    if(!conn_outAck_outAck__ack_ca_ack_ca_outAck_outAck__ack_ca_ack_ca_38__seen.has("nm::outAck")) { this.attachEndpointSafe(conn_outAck_outAck__ack_ca_ack_ca_outAck_outAck__ack_ca_ack_ca_38, this.FactoryAutomationSystem.agvs.vc.nm, "outAck"); conn_outAck_outAck__ack_ca_ack_ca_outAck_outAck__ack_ca_ack_ca_38__seen.add("nm::outAck"); }
    if(!conn_outAck_outAck__ack_ca_ack_ca_outAck_outAck__ack_ca_ack_ca_38__seen.has("vc::ack_ca")) { this.attachEndpointSafe(conn_outAck_outAck__ack_ca_ack_ca_outAck_outAck__ack_ca_ack_ca_38, this.FactoryAutomationSystem.agvs.vc, "ack_ca"); conn_outAck_outAck__ack_ca_ack_ca_outAck_outAck__ack_ca_ack_ca_38__seen.add("vc::ack_ca"); }
    this.addConnector(conn_outAck_outAck__ack_ca_ack_ca_outAck_outAck__ack_ca_ack_ca_38);
    
    const conn_sendNotificationMotor2_40 = new Connector("sendNotificationMotor2");
    const conn_sendNotificationMotor2_40__seen = new Set();
    if(!conn_sendNotificationMotor2_40__seen.has("cs::ack_cs")) { this.attachEndpointSafe(conn_sendNotificationMotor2_40, this.FactoryAutomationSystem.agvs.vc.cs, "ack_cs"); conn_sendNotificationMotor2_40__seen.add("cs::ack_cs"); }
    this.addConnector(conn_sendNotificationMotor2_40);
    
    const conn_x_x__cs_ack_cs_x_x__cs_ack_cs_41 = new Connector("x.x__cs.ack_cs_x.x__cs.ack_cs");
    const conn_x_x__cs_ack_cs_x_x__cs_ack_cs_41__seen = new Set();
    if(!conn_x_x__cs_ack_cs_x_x__cs_ack_cs_41__seen.has("cs::ack_cs")) { this.attachEndpointSafe(conn_x_x__cs_ack_cs_x_x__cs_ack_cs_41, this.FactoryAutomationSystem.agvs.vc.cs, "ack_cs"); conn_x_x__cs_ack_cs_x_x__cs_ack_cs_41__seen.add("cs::ack_cs"); }
    this.addConnector(conn_x_x__cs_ack_cs_x_x__cs_ack_cs_41);
  }
}

const __portAliases = {};
function createModel(){ return new SysADLArchitecture(); }
module.exports = { createModel, SysADLArchitecture, __portAliases };