#!/usr/bin/env node
/**
 * üéØ DISPARAR EVENTO AP√ìS TASK ESPEC√çFICA
 * Como usar timing condicional ao inv√©s de "immediate"
 */

console.log('üéØ DISPARAR EVENTO AP√ìS TASK ESPEC√çFICA');
console.log('=====================================\n');

console.log('## üìã SUA PERGUNTA');
console.log('Ao inv√©s de: inject AGV2atStationD immediate;');
console.log('Voc√™ quer: disparar AGV2atStationD AP√ìS uma task espec√≠fica\n');

console.log('## ‚ö° M√âTODOS DISPON√çVEIS NO SYSADL\n');

console.log('### M√âTODO 1: After Scene/Scenario (after)');
console.log(`
ScenarioExecution to MyScenarios {
  agv1.location = stationC.ID;
  agv2.location = stationD.ID;
  part.location = stationA.ID;
  
  // ‚úÖ Disparar AP√ìS uma scene espec√≠fica
  inject AGV2atStationD after SCN_MoveAGV1toA;
  
  // ‚úÖ Disparar AP√ìS um scenario espec√≠fico  
  inject AGV2atStationD after Scenario1;
  
  Scenario1;
}
`);

console.log('### M√âTODO 2: Condicionalmente (when)');
console.log(`
ScenarioExecution to MyScenarios {
  agv1.location = stationC.ID;
  agv2.location = stationD.ID;
  part.location = stationA.ID;
  
  // ‚úÖ Disparar QUANDO uma condi√ß√£o for atendida
  inject AGV2atStationD when agv1.location == stationA.ID;
  
  // ‚úÖ Disparar QUANDO m√∫ltiplas condi√ß√µes
  inject AGV2atStationD when agv1.location == stationA.ID && part.location == stationA.ID;
  
  Scenario1;
}
`);

console.log('### M√âTODO 3: Com Delay Ap√≥s Task (after + delay)');
console.log(`
ScenarioExecution to MyScenarios {
  agv1.location = stationC.ID;
  agv2.location = stationD.ID;
  part.location = stationA.ID;
  
  // ‚úÖ Disparar 5 segundos AP√ìS SCN_MoveAGV1toA
  inject AGV2atStationD after SCN_MoveAGV1toA after 5s;
  
  // ‚úÖ Disparar 10 segundos AP√ìS Scenario1 completar
  inject AGV2atStationD after Scenario1 after 10s;
  
  Scenario1;
}
`);

console.log('### M√âTODO 4: Before Task (before)');
console.log(`
ScenarioExecution to MyScenarios {
  agv1.location = stationC.ID;
  agv2.location = stationD.ID;
  part.location = stationA.ID;
  
  // ‚úÖ Disparar ANTES de uma scene espec√≠fica
  inject AGV2atStationD before SCN_AGV1movePartToC;
  
  // ‚úÖ Disparar ANTES de Scenario2
  inject AGV2atStationD before Scenario2;
  
  Scenario1;
  Scenario2;
}
`);

console.log('### M√âTODO 5: Dentro de uma Scene');
console.log(`
SceneDefinitions MyScenes to MyEvents {
  Scene def SCN_MoveAGV1toA on { 
    pre-condition {
      agv1.location == stationC.ID;
      part.location == stationA.ID; }
    start cmdSupervisor;
    
    // ‚úÖ Disparar evento DURANTE a execu√ß√£o da scene
    action inject AGV2atStationD after AGV1NotifArriveA;
    
    finish AGV1NotifArriveA;
    post-condition {
      agv1.location == stationA.ID;
      part.location == stationA.ID; }
  }
}
`);

console.log('### M√âTODO 6: Eventos Encadeados');
console.log(`
EventsDefinitions MyEvents to MyFactoryConfiguration {
  Event def AGV1Events for agv1 {
    ON AGV1NotifArriveA
      THEN AGV1AtStationA {
        agv1.outNotification.notification="arrived";
        :Notify(agv1, supervisor); }
      // ‚úÖ Disparar pr√≥ximo evento AP√ìS este
      THEN TriggerAGV2atStationD {
        :Event(AGV2atStationD); }
  }
}
`);

console.log('\n## üéÆ EXEMPLOS PR√ÅTICOS ESPEC√çFICOS\n');

console.log('### Exemplo 1: Disparar ap√≥s AGV1 chegar em StationA');
console.log(`
ScenarioExecution to MyScenarios {
  agv1.location = stationC.ID;
  agv2.location = stationD.ID;
  part.location = stationA.ID;
  
  // AGV2 detecta stationD SOMENTE ap√≥s AGV1 chegar em stationA
  inject AGV2atStationD when agv1.location == stationA.ID;
  
  Scenario1;
}
`);

console.log('### Exemplo 2: Disparar ap√≥s Scene completar');
console.log(`
ScenarioExecution to MyScenarios {
  agv1.location = stationC.ID;
  agv2.location = stationD.ID;
  part.location = stationA.ID;
  
  // AGV2 detecta stationD AP√ìS SCN_MoveAGV1toA completar
  inject AGV2atStationD after SCN_MoveAGV1toA;
  
  Scenario1;
}
`);

console.log('### Exemplo 3: Disparar ap√≥s evento espec√≠fico');
console.log(`
ScenarioExecution to MyScenarios {
  agv1.location = stationC.ID;
  agv2.location = stationD.ID;
  part.location = stationA.ID;
  
  // AGV2 detecta stationD AP√ìS AGV1NotifArriveA ser disparado
  inject AGV2atStationD after AGV1NotifArriveA;
  
  Scenario1;
}
`);

console.log('### Exemplo 4: Disparar com m√∫ltiplas condi√ß√µes');
console.log(`
ScenarioExecution to MyScenarios {
  agv1.location = stationC.ID;
  agv2.location = stationD.ID;
  part.location = stationA.ID;
  
  // AGV2 detecta stationD QUANDO AGV1 chegou E part foi carregada
  inject AGV2atStationD when agv1.location == stationA.ID && agv1.arm == loaded;
  
  Scenario1;
}
`);

console.log('\n## ‚öôÔ∏è IMPLEMENTA√á√ÉO NO SEU MODELO ATUAL\n');

console.log('### Op√ß√£o A: Ap√≥s Scene SCN_MoveAGV1toA');
console.log(`
ScenarioExecution to MyScenarios {
  agv1.location = stationC.ID;
  agv2.location = stationD.ID;
  part.location = stationA.ID;
  
  // ‚úÖ AGV2 detecta stationD AP√ìS AGV1 ir para stationA
  inject AGV2atStationD after SCN_MoveAGV1toA;
  
  Scenario1;
}
`);

console.log('### Op√ß√£o B: Quando AGV1 chegar em stationA');
console.log(`
ScenarioExecution to MyScenarios {
  agv1.location = stationC.ID;
  agv2.location = stationD.ID;
  part.location = stationA.ID;
  
  // ‚úÖ AGV2 detecta stationD QUANDO AGV1 estiver em stationA
  inject AGV2atStationD when agv1.location == "StationA";
  
  Scenario1;
}
`);

console.log('### Op√ß√£o C: Ap√≥s evento AGV1NotifArriveA');
console.log(`
ScenarioExecution to MyScenarios {
  agv1.location = stationC.ID;
  agv2.location = stationD.ID;
  part.location = stationA.ID;
  
  // ‚úÖ AGV2 detecta stationD AP√ìS evento AGV1NotifArriveA
  inject AGV2atStationD after AGV1NotifArriveA;
  
  Scenario1;
}
`);

console.log('\n## üîÑ FLUXO DE EXECU√á√ÉO RESULTANTE\n');

console.log('Com: inject AGV2atStationD after SCN_MoveAGV1toA;');
console.log('');
console.log('1. üöÄ Inicia execu√ß√£o');
console.log('2. ‚ñ∂Ô∏è Executa SCN_MoveAGV1toA');  
console.log('   - cmdSupervisor');
console.log('   - AGV1 viaja para stationA');
console.log('   - AGV1NotifArriveA');
console.log('3. ‚úÖ SCN_MoveAGV1toA completa');
console.log('4. ‚ö° DISPARA AGV2atStationD (autom√°tico)');
console.log('5. üîß agv2.sensor = stationD');
console.log('6. üéØ AGV2locationStationD (autom√°tico)');
console.log('7. ‚ñ∂Ô∏è Continua execu√ß√£o...');

console.log('\nüéØ **Escolha o m√©todo que melhor se adapta ao seu cen√°rio!**');